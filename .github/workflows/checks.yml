name: Checks

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0

      - name: Install linters
        run: pip install pycln isort black

      - name: Run Format Checks
        run: make check-format

  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions:
          - python: '3.8'
            torch: '1.13.1'
          - python: '3.9'
            torch: '1.13.1'
          - python: '3.10'
            torch: '1.13.1'
          - python: '3.10'
            torch: '2.3.1'
          - python: '3.11'
            torch: '2.3.1'
          # - python: '3.12'
          #   torch: '2.3.1'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.versions.python }}

      - name: Install dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry lock --check
          export CUDA_VISIBLE_DEVICES=0
          poetry add torch@${{ matrix.versions.torch }}+cpu --source torch_cpu
          poetry install --all-extras

      - name: tests
        run: make test

      - name: tests - strict mode
        run: make test WARN_STRICT=1

      - name: check typing
        if: ${{ matrix.versions.python != '3.8' && matrix.versions.python != '3.9' }}
        run: make typing
      
      - name: check typing in compatibility mode
        if: ${{ matrix.versions.python == '3.8' || matrix.versions.python == '3.9' }}
        run: make typing-compat